C:\Anaconda2\python.exe C:/Users/jd/PycharmProjects/mokuai/model.py
Help on class Form in module flask_wtf.form:

class Form(wtforms.ext.csrf.form.SecureForm)
 |  Flask-specific subclass of WTForms **SecureForm** class.
 |
 |  If formdata is not specified, this will use flask.request.form.
 |  Explicitly pass formdata = None to prevent this.
 |
 |  :param csrf_context: a session or dict-like object to use when making
 |                       CSRF tokens. Default: flask.session.
 |
 |  :param secret_key: a secret key for building CSRF tokens. If this isn't
 |                     specified, the form will take the first of these
 |                     that is defined:
 |
 |                     * SECRET_KEY attribute on this class
 |                     * WTF_CSRF_SECRET_KEY config of flask app
 |                     * SECRET_KEY config of flask app
 |                     * session secret key
 |
 |  :param csrf_enabled: whether to use CSRF protection. If False, all
 |                       csrf behavior is suppressed.
 |                       Default: WTF_CSRF_ENABLED config value
 |
 |  Method resolution order:
 |      Form
 |      wtforms.ext.csrf.form.SecureForm
 |      wtforms.form.Form
 |      wtforms.compat.NewBase
 |      wtforms.form.BaseForm
 |      __builtin__.object
 |
 |  Methods defined here:
 |
 |  __init__(self, formdata=<class flask_wtf.form._Auto>, obj=None, prefix='', csrf_context=None, secret_key=None, csrf_enabled=None, *args, **kwargs)
 |
 |  generate_csrf_token(self, csrf_context=None)
 |
 |  hidden_tag(self, *fields)
 |      Wraps hidden fields in a hidden DIV tag, in order to keep XHTML
 |      compliance.
 |
 |      .. versionadded:: 0.3
 |
 |      :param fields: list of hidden field names. If not provided will render
 |                     all hidden fields, including the CSRF field.
 |
 |  is_submitted(self)
 |      Checks if form has been submitted. The default case is if the HTTP
 |      method is **PUT** or **POST**.
 |
 |  validate_csrf_data(self, data)
 |      Check if the csrf data is valid.
 |
 |      .. versionadded: 0.9.0
 |
 |      :param data: the csrf string to be validated.
 |
 |  validate_csrf_token(self, field)
 |
 |  validate_on_submit(self)
 |      Checks if form has been submitted and if so runs validate. This is
 |      a shortcut, equivalent to ``form.is_submitted() and form.validate()``
 |
 |  ----------------------------------------------------------------------
 |  Data and other attributes defined here:
 |
 |  SECRET_KEY = None
 |
 |  TIME_LIMIT = None
 |
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from wtforms.ext.csrf.form.SecureForm:
 |
 |  data
 |
 |  ----------------------------------------------------------------------
 |  Data and other attributes inherited from wtforms.ext.csrf.form.SecureForm:
 |
 |  csrf_token = <UnboundField(CSRFTokenField, (), {})>
 |
 |  ----------------------------------------------------------------------
 |  Methods inherited from wtforms.form.Form:
 |
 |  __delattr__(self, name)
 |
 |  __delitem__(self, name)
 |
 |  __setitem__(self, name, value)
 |
 |  validate(self)
 |      Validates the form by calling `validate` on each field, passing any
 |      extra `Form.validate_<fieldname>` validators to the field validator.
 |
 |  ----------------------------------------------------------------------
 |  Data and other attributes inherited from wtforms.form.Form:
 |
 |  Meta = <class 'wtforms.meta.DefaultMeta'>
 |      This is the default Meta class which defines all the default values and
 |      therefore also the 'API' of the class Meta interface.
 |
 |  ----------------------------------------------------------------------
 |  Methods inherited from wtforms.form.BaseForm:
 |
 |  __contains__(self, name)
 |      Returns `True` if the named field is a member of this form.
 |
 |  __getitem__(self, name)
 |      Dict-style access to this form's fields.
 |
 |  __iter__(self)
 |      Iterate form fields in creation order.
 |
 |  populate_obj(self, obj)
 |      Populates the attributes of the passed `obj` with data from the form's
 |      fields.
 |
 |      :note: This is a destructive operation; Any attribute with the same name
 |             as a field will be overridden. Use with caution.
 |
 |  process(self, formdata=None, obj=None, data=None, **kwargs)
 |      Take form, object data, and keyword arg input and have the fields
 |      process them.
 |
 |      :param formdata:
 |          Used to pass data coming from the enduser, usually `request.POST` or
 |          equivalent.
 |      :param obj:
 |          If `formdata` is empty or not provided, this object is checked for
 |          attributes matching form field names, which will be used for field
 |          values.
 |      :param data:
 |          If provided, must be a dictionary of data. This is only used if
 |          `formdata` is empty or not provided and `obj` does not contain
 |          an attribute named the same as the field.
 |      :param `**kwargs`:
 |          If `formdata` is empty or not provided and `obj` does not contain
 |          an attribute named the same as a field, form will assign the value
 |          of a matching keyword argument to the field, if one exists.
 |
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from wtforms.form.BaseForm:
 |
 |  __dict__
 |      dictionary for instance variables (if defined)
 |
 |  __weakref__
 |      list of weak references to the object (if defined)
 |
 |  errors


Process finished with exit code 0